Binary files org/script.artistslideshow/.DS_Store and new/script.artistslideshow/.DS_Store differ
diff -rupN org/script.artistslideshow/default.py new/script.artistslideshow/default.py
--- org/script.artistslideshow/default.py	2012-02-24 16:11:05.000000000 -0500
+++ new/script.artistslideshow/default.py	2012-02-25 11:59:39.000000000 -0500
@@ -117,20 +117,22 @@ class Main:
                 log('no music playing')
                 if self.DAEMON == "False":
                     self.WINDOW.clearProperty("ArtistSlideshowRunning")
+            elif(not self.OVERRIDEPATH == ''):
+                self.WINDOW.setProperty("ArtistSlideshow", self.OVERRIDEPATH)
             else:
                 log('first song started')
                 time.sleep(0.2) # it may take some time for xbmc to read tag info after playback started
-                self._start_download()
-            while (not xbmc.abortRequested):
+                self._use_correct_artwork()
+            while (not xbmc.abortRequested and self.OVERRIDEPATH == ''):
                 time.sleep(0.5)
                 if xbmc.getInfoLabel( "Window(12006).Property(ArtistSlideshowRunning)" ) == "True":
                     if xbmc.Player().isPlayingAudio() == True:
                         currentname = xbmc.Player().getMusicInfoTag().getArtist()
                         if self.NAME != currentname:
-                            log('new artist playing, start download')
                             self._clear_properties()
-                            self._start_download()
-                        elif not self.DownloadedAllImages:
+                            self.UsingFallback = False
+                            self._use_correct_artwork()
+                        elif(not (self.DownloadedAllImages or self.LocalImagesFound or self.UsingFallback)):
                             log('same artist playing, continue download')
                             self._start_download()
                     else:
@@ -142,7 +144,28 @@ class Main:
                     self._clear_properties()
                     break
 
-      
+
+    def _use_correct_artwork( self ):
+        if(self.PRIORITIZELOCAL == 'true'):
+            log('looking for local artwork')
+            self._get_local_images()
+            if(not self.LocalImagesFound):
+                log('no local artist artwork found, start download')
+                self._start_download()
+        else:
+            log('start download')
+            self._start_download()
+            if(not (self.CachedImagesFound or self.ImageDownloaded)):
+                log('no remote artist artwork found, looking for local artwork')
+                self._get_local_images()
+        if(not (self.LocalImagesFound or self.CachedImagesFound or self.ImageDownloaded)):
+            if (not self.FALLBACKPATH == ''):
+                log('no images found for artist, using fallback slideshow')
+                log('fallbackdir = ' +self.FALLBACKPATH)
+                self.UsingFallback = True
+                self.WINDOW.setProperty("ArtistSlideshow", self.FALLBACKPATH)                            
+
+
     def _parse_argv( self ):
         try:
             params = dict( arg.split( "=" ) for arg in sys.argv[ 1 ].split( "&" ) )
@@ -164,7 +187,12 @@ class Main:
             self.minheight = 0
         self.LASTFM = __addon__.getSetting( "lastfm" )
         self.HTBACKDROPS = __addon__.getSetting( "htbackdrops" )
+        self.HDASPECTONLY = __addon__.getSetting( "hd_aspect_only" )
         self.ARTISTINFO = __addon__.getSetting( "artistinfo" )
+        self.LOCALARTISTPATH = __addon__.getSetting( "local_artist_path" )
+        self.PRIORITIZELOCAL = __addon__.getSetting( "prioritize_local" )
+        self.FALLBACKPATH = __addon__.getSetting( "fallback_path" )
+        self.OVERRIDEPATH = __addon__.getSetting( "slideshow_path" )
         self.LANGUAGE = __addon__.getSetting( "language" )
         for language in LANGUAGES:
             if self.LANGUAGE == language[2]:
@@ -175,6 +203,11 @@ class Main:
     def _init_vars( self ):
         self.WINDOW = xbmcgui.Window( 12006 )
         self.NAME = ''
+        self.LocalImagesFound = False
+        self.CachedImagesFound = False
+        self.ImageDownloaded = False
+        self.DownloadedAllImages = False
+        self.UsingFallback = False
         LastfmApiKey = 'fbd57a1baddb983d1848a939665310f6'
         HtbackdropsApiKey = '96d681ea0dcb07ad9d27a347e64b652a'
         self.LastfmURL = 'http://ws.audioscrobbler.com/2.0/?autocorrect=1&api_key=' + LastfmApiKey
@@ -234,9 +267,13 @@ class Main:
 
             path = getCacheThumbName(url, self.CacheDir)
             if not xbmcvfs.exists(path):
-                download(url, path)
-                log('downloaded %s to %s' % (url, path) )
-                self.ImageDownloaded=True
+                try:
+                    download(url, path)
+                except:
+                    log ('site unreachable')
+                else:
+                    log('downloaded %s to %s' % (url, path) )
+                    self.ImageDownloaded=True
             if self.ImageDownloaded:
                 if not self.DownloadedFirstImage:
                     log('downloaded first image')
@@ -260,11 +297,38 @@ class Main:
             log('no images downloaded')
             self.DownloadedAllImages = True
             if not self.CachedImagesFound:
+                log('clearing ArtistSlideshow property')
                 self.WINDOW.clearProperty("ArtistSlideshow")
                 if self.ARTISTINFO == "true":
                     self._get_artistinfo()
 
 
+    def _get_local_images( self ):
+        self.LocalImagesFound = False
+        self.NAME = xbmc.Player().getMusicInfoTag().getArtist()
+        if len(self.NAME) == 0:
+            log('no artist name provided')
+            return
+        self.LocalDir = self.LOCALARTISTPATH + self.NAME + '/extrafanart'
+        log('localdir = %s' % self.LocalDir)
+        try:
+            files = os.listdir(self.LocalDir)
+            for file in files:
+                if(file.endswith('tbn') or file.endswith('jpg') or file.endswith('jpeg') or file.endswith('gif') or file.endswith('png')):
+                    self.LocalImagesFound = True
+        except OSError:
+            self.LocalImagesFound = False
+
+        if self.LocalImagesFound:
+            log('local images found')
+            self.WINDOW.setProperty("ArtistSlideshow", self.LocalDir)
+            if self.ARTISTINFO == "true":
+                CacheName = xbmc.getCacheThumbName(self.NAME).replace('.tbn', '')
+                self.CacheDir = xbmc.translatePath('special://profile/addon_data/%s/ArtistSlideshow/%s/' % ( __addonname__ , CacheName, ))
+                checkDir(self.CacheDir)
+                self._get_artistinfo()
+
+
     def _get_images( self, site ):
         if site == "lastfm":
             self.info = 'artist.getImages'
@@ -332,7 +396,12 @@ class Main:
                             width = element.attrib.get('width')
                             height = element.attrib.get('height')
                             if ( int(width) >= self.minwidth ) and ( int(height) >= self.minheight ):
-                                data.append(element.text)
+                                if(self.HDASPECTONLY == 'true'):
+                                    aspect_ratio = int(width)/int(height)
+                                    if(aspect_ratio > 1.770 and aspect_ratio < 1.787):
+                                        data.append(element.text)
+                                else:
+                                    data.append(element.text)
                 elif site == "htbackdrops":
                     if element.tag == "id":
                         data.append(self.HtbackdropsDownloadURL + str( element.text ) + '/fullsize')
diff -rupN org/script.artistslideshow/resources/language/English/strings.xml new/script.artistslideshow/resources/language/English/strings.xml
--- org/script.artistslideshow/resources/language/English/strings.xml	2012-02-24 16:11:05.000000000 -0500
+++ new/script.artistslideshow/resources/language/English/strings.xml	2012-02-25 11:59:39.000000000 -0500
@@ -53,4 +53,10 @@
     <string id="32004">Minimal image height</string>
     <string id="32005">Download additional artist information</string>
     <string id="32006">Preferred language for artist information</string>
+    <string id="32007">Download only 16:9 images</string>
+    <string id="33000">Advanced</string>
+    <string id="33001">Local artist folder</string>
+    <string id="33002">    Prioritize local artist artwork</string>
+    <string id="33003">Fallback slideshow folder</string>
+    <string id="33004">Override slideshow folder</string>
 </strings>
diff -rupN org/script.artistslideshow/resources/settings.xml new/script.artistslideshow/resources/settings.xml
--- org/script.artistslideshow/resources/settings.xml	2012-02-24 16:11:05.000000000 -0500
+++ new/script.artistslideshow/resources/settings.xml	2012-02-25 11:59:39.000000000 -0500
@@ -1,11 +1,19 @@
 <?xml version="1.0" encoding="utf-8" standalone="yes"?>
 <settings>
-    <category label="30100">
+    <category label="32000">
         <setting id="lastfm" type="bool" label="32001" default="true"/>
         <setting id="htbackdrops" type="bool" label="32002" default="false"/>
         <setting id="minwidth" type="text" label="32003" default="0"/>
         <setting id="minheight" type="text" label="32004" default="0"/>
+        <setting id="hd_aspect_only" type="bool" label="32007" default="false"/>
+        <setting type="sep" />
         <setting id="artistinfo" type="bool" label="32005" default="false"/>
         <setting id="language" type="enum" label="32006" enable="eq(-1,true)" default="11" lvalues="30201|30202|30203|30204|30205|30206|30207|30208|30209|30210|30211|30212|30213|30247|30214|30215|30216|30217|30218|30219|30220|30221|30222|30224|30225|30226|30227|30228|30229|30230|30232|30233|30234|30235|30236|30237|30238|30239|30240|30242|30243|30244|30245|30246"/>
     </category>
+    <category label="33000">
+        <setting id="local_artist_path" type="folder" label="33001" default=""/>
+        <setting id="prioritize_local" type="bool" label="33002" default="false"/>
+        <setting id="fallback_path" type="folder" label="33003" default=""/>
+        <setting id="slideshow_path" type="folder" label="33004" default=""/>
+    </category>
 </settings>
